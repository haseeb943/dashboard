{"version":3,"sources":["logo.svg","components/Bootstrap.js","components/WidgetText.js","components/WidgetBar.js","components/widgetDoughnut.js","components/widgetPareto.js","components/dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Component","WidgetText","props","className","title","class","value","description","ReactFC","fcRoot","FusionCharts","Chart","FusionTheme","WidgetBar","chartConfigs","type","width","height","dataFormat","dataSource","chart","bgColor","theme","data","widgetDoughnut","widgetPareto","config","url","dashboard","getData","arg","arr","state","items","arrLen","length","organicSource","directSource","referralSource","socialSource","emailSource","pageViews","users","newUsers","sessions","noSession","pagePerSession","avgSession","bounceRate","sourceArr","usersArr","sessionArr","sessChart","i","organic_source","direct_source","referral_source","social_source","email_source","page_views","new_users","number_of_sessions_per_users","page_per_session","avg_session_time","bounce_rate","push","label","setState","console","log","updateDashboard","event","selectedValue","dropdownOptions","fetch","then","response","json","batchRowValues","valueRanges","values","rows","rowObject","j","month","Array","from","Set","reverse","options","this","onChange","placeholder","col-md-12","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec12ad21.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react'\r\nimport {Container,Row,Col} from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Bootstrap extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Bootstrap;\r\n","import React from 'react'\r\n\r\nfunction WidgetText(props) {\r\n    return (\r\n        <div className=\"widgetWrap\">\r\n        <div className=\"widgetTitle\">\r\n        {props.title}\r\n        </div>\r\n        <div className=\"widgetValue\">\r\n            <div class=\"value\">{props.value}</div>\r\n            <div class=\"description\">{props.description}</div>\r\n        </div>\r\n    </div> \r\n    )\r\n}\r\n\r\nexport default WidgetText;\r\n","import React from 'react'\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Chart from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\nReactFC.fcRoot(FusionCharts, Chart, FusionTheme);\r\n\r\nfunction WidgetBar(props) {\r\n   \r\n    const chartConfigs = {\r\n        type: \"bar2d\", // The chart type\r\n        width: \"95%\", // Width of the chart\r\n        height: \"125\", // Height of the chart\r\n        dataFormat: \"json\", // Data type\r\n        dataSource: {\r\n          // Chart Configuration\r\n          chart: {\r\n          //  caption: \"Countries With Most Oil Reserves [2017-18]\",    //Set the chart caption\r\n          //   subCaption: \"In MMbbl = One Million barrels\",             //Set the chart subcaption\r\n          //   xAxisName: \"Country\",           //Set the x-axis name\r\n          //  yAxisName: \"Reserves (MMbbl)\",  //Set the y-axis name\r\n          //   numberSuffix: \"K\",\r\n            bgColor: \"#2a2a2a\",\r\n            theme: \"fusion\"                 //Set the theme for your chart\r\n          },\r\n          // Chart Data - from step 2\r\n          data: props.data\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className=\"widgetWrap\">\r\n        <div className=\"widgetTitle\">\r\n        {props.title}\r\n        \r\n        </div>\r\n        <div className=\"widgetValue\">\r\n        <ReactFC {...chartConfigs} />\r\n\r\n         </div>\r\n    </div> \r\n    )\r\n}\r\n\r\nexport default WidgetBar;\r\n","import React from 'react'\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Chart from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\nReactFC.fcRoot(FusionCharts, Chart, FusionTheme);\r\n\r\nfunction widgetDoughnut(props) {\r\n   \r\n    const chartConfigs = {\r\n        type: \"doughnut2d\", // The chart type\r\n        width: \"97%\", // Width of the chart\r\n        height: \"125\", // Height of the chart\r\n        dataFormat: \"json\", // Data type\r\n        dataSource: {\r\n          // Chart Configuration\r\n          chart: {\r\n            bgColor: \"#2a2a2a\",\r\n            theme: \"fusion\"                \r\n \r\n          },\r\n          // Chart Data - from step 2\r\n          data: props.data\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className=\"widgetWrap\">\r\n        <div className=\"widgetTitle\">\r\n        {props.title}\r\n        </div>\r\n        <div className=\"widgetValue\">\r\n        <ReactFC {...chartConfigs} />\r\n\r\n         </div>\r\n    </div> \r\n    )\r\n}\r\n\r\nexport default widgetDoughnut;\r\n","import React from 'react'\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Chart from \"fusioncharts/fusioncharts.charts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\nReactFC.fcRoot(FusionCharts, Chart, FusionTheme);\r\n\r\nfunction widgetPareto(props) {\r\n   \r\n    const chartConfigs = {\r\n        type: \"pareto3d\", // The chart type\r\n        width: \"100%\", // Width of the chart\r\n        height: \"125\", // Height of the chart\r\n        dataFormat: \"json\", // Data type\r\n        dataSource: {\r\n          // Chart Configuration\r\n          chart: {\r\n          //  caption: \"Countries With Most Oil Reserves [2017-18]\",    //Set the chart caption\r\n          //   subCaption: \"In MMbbl = One Million barrels\",             //Set the chart subcaption\r\n          //   xAxisName: \"Country\",           //Set the x-axis name\r\n          //  yAxisName: \"Reserves (MMbbl)\",  //Set the y-axis name\r\n          //   numberSuffix: \"K\",\r\n            bgColor: \"#2a2a2a\",\r\n            theme: \"fusion\"                 //Set the theme for your chart\r\n          },\r\n          // Chart Data - from step 2\r\n          data: props.data\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className=\"widgetWrap\">\r\n        <div className=\"widgetTitle\">\r\n        {props.title}\r\n        \r\n        </div>\r\n        <div className=\"widgetValue\">\r\n        <ReactFC {...chartConfigs} />\r\n\r\n         </div>\r\n    </div> \r\n    )\r\n}\r\n\r\nexport default widgetPareto;\r\n","import React, { Component } from 'react'\r\nimport './dashboard.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport WidgetText from './WidgetText';\r\nimport WidgetBar from './WidgetBar';\r\nimport WidgetDoughnut from './widgetDoughnut';\r\nimport WidgetPareto from './widgetPareto';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\n\r\n\r\nconst config = {\r\n    apiKey: 'AIzaSyDMu-Vw30ykPPmFT3cXeunzKEi4EahzglI',\r\n    spreadsheetId: '1vcDPrMexD8bxNwwzK9IxF8wch6Hfezq2eooJACDiqgg'\r\n}\r\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId\r\n    }/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\r\n\r\n\r\nclass dashboard extends Component {\r\n    \r\n   constructor(){\r\n       super(); \r\n       this.state={\r\n           items: [],\r\n           dropdownOptions: [],\r\n           selectedValue: null,\r\n           organicSource: null,\r\n           directSource: null,\r\n           referralSource: null,\r\n           socialSource: null,\r\n           emailSource: null,\r\n           pageViews: null,\r\n           users: null,\r\n           newUsers: null,\r\n           sessions: null,\r\n           noSession: null,\r\n           pagePerSession: null,\r\n           avgSession: null,\r\n           bounceRate: null,\r\n           sourceArr: [],\r\n           usersArr: [],\r\n           sessionArr: [],\r\n           sessChart: [],\r\n       }\r\n   }\r\n\r\n   getData= arg =>{\r\n       const arr = this.state.items;\r\n       const arrLen = arr.length;\r\n\r\n       let organicSource=0;\r\n       let directSource=0;\r\n       let referralSource=0;\r\n       let socialSource=0;\r\n       let emailSource=0;\r\n       let pageViews=0;\r\n       let users=0;\r\n       let newUsers=0;\r\n       let sessions=0;\r\n       let noSession=0;\r\n       let pagePerSession=0;\r\n       let avgSession=0;\r\n       let bounceRate=0;\r\n       let selectedValue=null;\r\n       let sourceArr = [];\r\n       let usersArr=[];\r\n       let sessionArr=[];\r\n       let sessChart=[];\r\n\r\n       for(let i=0; i<arrLen; i++){\r\n           if(arg === arr[i][\"month\"]){\r\n               organicSource=arr[i].organic_source;\r\n               directSource=arr[i].direct_source;\r\n               referralSource=arr[i].referral_source;\r\n               socialSource=arr[i].social_source;\r\n               emailSource=arr[i].email_source;\r\n               pageViews=arr[i].page_views;\r\n               users=arr[i].users;\r\n               newUsers=arr[i].new_users;\r\n               sessions=arr[i].sessions;\r\n               noSession=arr[i].number_of_sessions_per_users;\r\n               pagePerSession=arr[i].page_per_session;\r\n               avgSession=arr[i].avg_session_time;\r\n               bounceRate=arr[i].bounce_rate;\r\n               sourceArr.push(\r\n                {\r\n                    label: \"Organic Source\",\r\n                    value: arr[i].organic_source\r\n                  },\r\n                  {\r\n                    label: \"Direct Source\",\r\n                    value: arr[i].direct_source\r\n                  },\r\n                  {\r\n                    label: \"Referral Source\",\r\n                    value: arr[i].referral_source\r\n                  },\r\n                  {\r\n                    label: \"Social Source\",\r\n                    value: arr[i].social_source\r\n                  },\r\n                  {\r\n                    label: \"Email Source\",\r\n                    value: arr[i].email_source\r\n                  }\r\n                 \r\n               );\r\n               usersArr.push(\r\n                {\r\n                    label: \"Users\",\r\n                    value: arr[i].users\r\n                  },\r\n                  {\r\n                    label: \"New Users\",\r\n                    value: arr[i].new_users\r\n                  },\r\n               );\r\n\r\n               sessionArr.push(\r\n                // {\r\n                //     label: \"Sessions\",\r\n                //     value: arr[i].sessions\r\n                //   },\r\n                  {\r\n                    label: \"No Of Sessions Per Users\",\r\n                    value: arr[i].number_of_sessions_per_users\r\n                  },\r\n                  {\r\n                    label: \"Page Per Session\",\r\n                    value: arr[i].page_per_session\r\n                  },\r\n                  {\r\n                    label: \"Avg Session Time\",\r\n                    value: arr[i].avg_session_time\r\n                  },\r\n                  {\r\n                    label: \"Bounce Rate\",\r\n                    value: arr[i].bounce_rate\r\n                  }\r\n                 \r\n               );\r\n               sessChart.push(\r\n                {\r\n                    label: \"Sessions\",\r\n                    value: arr[i].sessions\r\n                  }\r\n               );\r\n           }\r\n       }\r\n       selectedValue=arg;\r\n\r\n       this.setState({\r\n           organicSource: organicSource,\r\n           directSource:directSource,\r\n           referralSource:referralSource,\r\n           socialSource:socialSource,\r\n           emailSource:emailSource,\r\n           pageViews:pageViews,\r\n           users:users,\r\n           newUsers:newUsers,\r\n           sessions:sessions,\r\n           noSession:noSession,\r\n           pagePerSession:pagePerSession,\r\n           avgSession:avgSession,\r\n           bounceRate:bounceRate,\r\n           sourceArr: sourceArr,\r\n           usersArr:usersArr,\r\n           sessionArr:sessionArr,\r\n           sessChart:sessChart,\r\n       })\r\n       console.log(this.state.sourceArr)\r\n   }\r\n\r\n   updateDashboard=event=>{\r\n       this.getData(event.value);\r\n       this.setState({selectedValue: event.value}, ()=>{\r\n           console.log(this.state.organicSource)\r\n       }); \r\n   }\r\n\r\n   componentDidMount(){\r\n    fetch(url)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n\r\n        let batchRowValues = data.valueRanges[0].values;\r\n\r\n        const rows = [];\r\n\r\n        for (let i = 1; i < batchRowValues.length; i++) {\r\n            let rowObject = {};\r\n            for (let j = 0; j < batchRowValues[i].length; j++) {\r\n                rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\r\n            }\r\n            rows.push(rowObject);\r\n        }\r\n\r\n        let dropdownOptions = [];\r\n\r\n        for (let i = 0; i < rows.length; i++) {\r\n            dropdownOptions.push(rows[i].month);\r\n        }\r\n\r\n        dropdownOptions = Array.from(new Set(dropdownOptions)).reverse();\r\n        this.setState(\r\n            {\r\n                items: rows,\r\n                dropdownOptions: dropdownOptions,\r\n                selectedValue: \"Jan 2018\"\r\n            },\r\n            () => this.getData(\"Jan 2018\")\r\n        );\r\n\r\n        });\r\n   }\r\n\r\n    render() {\r\n         \r\n      \r\n        return ( \r\n            <div>\r\n            {/* <container fluid>\r\n                <Row className=\"TopHeader\">\r\n                    <Col>\r\n                    Dashboard\r\n                    </Col>\r\n                    <Col>\r\n                    <Dropdown options={this.state.dropdownOptions} onChange={this.updateDashboard} value={this.state.selectedValue} placeholder=\"Select an option\" />\r\n                    </Col>\r\n                </Row>\r\n            </container> */}\r\n            <div className=\"container-fluid abc\">\r\n            {/* <div className=\"container-fluid dash_head\"> */}\r\n               <div className=\"row dash_head\">\r\n                   <div className=\"col-lg-8\">\r\n                       <h1> Dashboard</h1>\r\n                   </div>\r\n                   <div className=\"col-lg-4\">\r\n                   <Dropdown options={this.state.dropdownOptions} onChange={this.updateDashboard} value={this.state.selectedValue} placeholder=\"Select an option\" />\r\n                   </div>\r\n               </div>\r\n               {/* </div> */}\r\n            {/* <container fluid>\r\n               SOURCE STATE\r\n            </container> */}\r\n            <div className=\"row\">\r\n            <div className=\"col-md-12 heading-color\">\r\n              <h1>SOURCE STATE</h1>\r\n              </div>\r\n            </div>\r\n         {/* <div className=\"container\"> */}\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                <WidgetText title=\"ORGANIC SOURCE\" value={this.state.organicSource} />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                <WidgetText title=\"DIRECT SOURCE\" value={this.state.directSource} />\r\n             \r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                <WidgetText title=\"REFERRAL SOURCE\" value={this.state.referralSource} />\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                <WidgetText title=\"SOCIAL SOURCE\" value={this.state.socialSource} />\r\n            \r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                <WidgetText title=\"EMAIL SOURCE\" value={this.state.emailSource} />\r\n             \r\n                </div>\r\n                <div col-md-12>\r\n              <WidgetPareto title=\"SOURCE COMPARISION\" data={this.state.sourceArr} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n            <div className=\"col-md-12 heading-color\">\r\n              <h1>USERS COMPARISION</h1>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n              <WidgetText title=\"USER\" value={this.state.users} />\r\n               </div>\r\n               <div className=\"col-md-4\">\r\n               <WidgetText title=\"NEW USER\" value={this.state.newUsers} />\r\n               </div>\r\n              \r\n               <div className=\"col-md-4\">\r\n               <WidgetText title=\"PAGE VIEWS\" value={this.state.pageViews} />\r\n               </div>\r\n               <div className=\"col-md-12\">\r\n               <WidgetDoughnut title=\"USERS COMPARISION\" data={this.state.usersArr} />\r\n\r\n               </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n            <div className=\"col-md-12 heading-color\">\r\n              <h1>SESSION STATE</h1>\r\n              </div>\r\n            </div>\r\n\r\n            \r\n            {/* <div className=\"abc\"></div> */}\r\n            <div className=\"row\">\r\n             <div className=\"col-md-4\">\r\n             <WidgetText title=\"SESSIONS\" value={this.state.sessions} />\r\n             </div>\r\n             <div className=\"col-md-4\">\r\n             <WidgetText title=\"NO OF SESSIONS PER USERS\" value={this.state.noSession} />\r\n             </div>\r\n             <div className=\"col-md-4\">\r\n             <WidgetText title=\"PAGE PER SESSION\" value={this.state.pagePerSession} />\r\n             </div>\r\n             <div className=\"col-md-6\">\r\n             <WidgetText title=\"AVG SESSION TIME\" value={this.state.avgSession} />\r\n             </div>\r\n             <div className=\"col-md-6\">\r\n             <WidgetText title=\"BOUNCE RATE\" value={this.state.bounceRate} />\r\n             </div>\r\n             <div className=\"col-md-6\">\r\n                 <WidgetBar title=\"SESSION CHART\" data={this.state.sessChart} />\r\n             </div>\r\n             <div className=\"col-md-6\">\r\n                 <WidgetBar title=\"SESSION COMPARISION\" data={this.state.sessionArr} />\r\n             </div>\r\n\r\n            </div>\r\n            \r\n            {/* <container className=\"mainDashboard\">\r\n                <Row >\r\n                    <Col>\r\n             <WidgetText title=\"ORGANIC SOURCE\" value={this.state.organicSource} />\r\n                    </Col>\r\n                    <Col>\r\n             <WidgetText title=\"DIRECT SOURCE\" value={this.state.directSource} />\r\n                    </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                    <Col>\r\n             <WidgetText title=\"REFERRAL SOURCE\" value={this.state.referralSource} />\r\n                    </Col>\r\n                    <Col>\r\n             <WidgetPareto title=\"SOURCE COMPARISION\" data={this.state.sourceArr} />\r\n                    </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                    <Col>\r\n             <WidgetText title=\"SOCIAL SOURCE\" value={this.state.socialSource} />\r\n                    </Col>\r\n                    <Col>\r\n             <WidgetText title=\"EMAIL SOURCE\" value={this.state.emailSource} />\r\n                    </Col>\r\n                    </Row>\r\n\r\n                <Row >\r\n                    <Col>\r\n             <WidgetText title=\"USER\" value={this.state.users} />\r\n                    </Col>\r\n                    <Col>\r\n             <WidgetText title=\"NEW USER\" value={this.state.newUsers} />\r\n                    </Col>\r\n                    <Col>\r\n             <WidgetText title=\"PAGE VIEWS\" value={this.state.pageViews} />\r\n                    </Col>\r\n                    <Col>\r\n            <WidgetDoughnut title=\"USERS COMPARISION\" data={this.state.usersArr} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row >\r\n                    <Col>\r\n             <WidgetText title=\"SESSIONS\" value={this.state.sessions} />\r\n                    </Col>\r\n                    <Col>\r\n             <WidgetText title=\"NO OF SESSIONS PER USERS\" value={this.state.noSession} />\r\n                    </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                    <Col>\r\n             <WidgetText title=\"PAGE PER SESSION\" value={this.state.pagePerSession} />\r\n                    </Col>\r\n                    <Col>\r\n                    <WidgetBar title=\"SESSION COMPARISION\" data={this.state.sessionArr} />\r\n                    </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                    <Col>\r\n             <WidgetText title=\"AVG SESSION TIME\" value={this.state.avgSession} />\r\n                    </Col>\r\n                    <Col>\r\n             <WidgetText title=\"BOUNCE RATE\" value={this.state.bounceRate} />\r\n                    </Col>\r\n                    </Row>\r\n            </container>*/}\r\n                    \r\n            </div> \r\n            <div className=\"row\">\r\n            <div className=\"col-md-12 footer\">\r\n              <p>Creadet by: Muhammad Haseeb</p>\r\n              </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default dashboard;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Bootstrap from './components/Bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FetchData from './components/FetchData';\n// import Chart from './components/Chart';\nimport Dashboard from './components/dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}